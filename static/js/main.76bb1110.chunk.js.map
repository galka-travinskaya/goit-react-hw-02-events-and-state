{"version":3,"sources":["components/ColorPicker/ColorPicker.js","components/TodoList/TodoList.js","components/Form/Form.js","components/TodoEditor/TodoEditor.js","components/Filter/Filter.js","App.js","index.js","components/ColorPicker/ColorPicker.module.css"],"names":["ColorPicker","state","activeOptionsIdx","setActiveIdx","index","setState","makeOptionClassName","optionClasses","s","option","push","optionActive","join","this","options","props","label","className","container","title","map","color","style","backgroundColor","onClick","Component","TodoList","todos","onDeleteTodo","onToggleCompleted","id","text","completed","classNames","type","chacked","onChange","Form","name","tag","experience","licence","nameInputId","shortid","generate","tagInputId","handleChange","e","currentTarget","value","handleSubmit","preventDefault","onSubmit","reset","handleLicenceChanges","console","log","htmlFor","checked","TodoEditor","message","Filter","colorPickerOptions","App","initialTodos","filter","addTodo","todo","deleteTodo","todoId","prevState","formSubmitHandler","data","toggleComplitid","changeFilter","getVisibleTodos","normalizedFilter","toLowerCase","includes","calculateCompletedTodos","reduce","total","totalTodoCount","length","filteredTodos","completedTodos","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.76bb1110.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport s from './ColorPicker.module.css';\r\n// import classNames from 'classnames'\r\n\r\nclass ColorPicker extends Component {\r\n    state = {\r\n        activeOptionsIdx: 0,\r\n    };\r\n\r\n    setActiveIdx = index => {\r\n        this.setState({activeOptionsIdx: index});\r\n    }\r\n    // без пакета classnames\r\n    makeOptionClassName = (index) => {\r\n        const optionClasses = [s.option];\r\n        // не работает почему-то\r\n        if(index === this.state.activeOptionsIdx) {\r\n            optionClasses.push(s.optionActive);\r\n        }\r\n\r\n        return optionClasses.join(' ');\r\n    }\r\n\r\n    // с пакетом classnames\r\n    // makeOptionClassName = index => {\r\n    //   return classNames('s.option', {\r\n    //     's.optionActive': index === this.state.activeOptionsIdx,\r\n    //   });\r\n    // }\r\n\r\n    render() {\r\n        const {activeOptionsIdx} = this.state;\r\n        const {options} = this.props;\r\n        const {label} = options[activeOptionsIdx];\r\n\r\n        return (\r\n            <div className={s.container}>\r\n              <h2 className={s.title}>Color Picker</h2>\r\n              <p>Выбран цвет: {label}</p>\r\n              <div>\r\n                {options.map(({label, color}, index) => (\r\n                    <button\r\n                    key={label}\r\n                    className={this.makeOptionClassName(index)}\r\n                    style={{ backgroundColor: color }}\r\n                    onClick={() => this.setActiveIdx(index)}\r\n                  ></button>\r\n                  )\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\n  export default ColorPicker;\r\n  ","import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport './TodoList.css'\r\n\r\nconst TodoList = ({todos, onDeleteTodo, onToggleCompleted}) => (\r\n    <ul className='TodoList'>\r\n        {todos.map(({id, text, completed}) => (\r\n            <li key={id} \r\n                className={classNames('TodoList__item', {\r\n                    'TodoList__item--completed': completed,\r\n                })}>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    className=\"TodoList__checkbox\"\r\n                    chacked={completed}\r\n                    onChange={() => onToggleCompleted(id)}\r\n                />\r\n                <p className='TodoList__text'>{text}</p>\r\n                <button \r\n                    type=\"button\"\r\n                    classNames=\"TodoList__btn\"\r\n                    onClick={() => onDeleteTodo(id)}\r\n                    >Удалить\r\n                </button>\r\n            </li>\r\n        ))}\r\n    </ul>);\r\n\r\nexport default TodoList;","import React, {Component} from 'react'\r\nimport shortid from 'shortid';\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        name: '',\r\n        tag: '',\r\n        experience: 'junior',\r\n        licence: true\r\n    }\r\n\r\n    nameInputId = shortid.generate();\r\n    tagInputId = shortid.generate();\r\n\r\n    handleChange = e => {\r\n        const {name, value} = e.currentTarget;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    }\r\n\r\n    handleLicenceChanges = e => {\r\n        this.setState({licence: e.currentTarget.chacked});\r\n        console.log(e.currentTarget.chacked);\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({name: '', tag: ''});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label htmlFor={this.nameInputId}>\r\n                    Name \r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"name\"\r\n                        value={this.state.name} \r\n                        onChange={this.handleChange}\r\n                        id={this.nameInputId}\r\n                        />\r\n                </label>\r\n                <label htmlFor={this.tagInputId}>\r\n                    Surname \r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"tag\" \r\n                        value={this.state.tag} \r\n                        onChange={this.handleChange}\r\n                        id={this.tagInputId}\r\n                    />\r\n                </label>\r\n                <p>Your level</p>\r\n\r\n                <label>\r\n                    <input \r\n                        type=\"radio\" \r\n                        name=\"experience\" \r\n                        value=\"junior\" \r\n                        onChange={this.handleChange}\r\n                        checked={this.state.experience === 'junior'}/>Junior\r\n                </label>\r\n                <label>\r\n                    <input \r\n                        type=\"radio\" \r\n                        name=\"experience\" \r\n                        value=\"middle\" \r\n                        onChange={this.handleChange}\r\n                        checked={this.state.experience === 'middle'}/>Middle\r\n                </label>    \r\n                <label>\r\n                    <input \r\n                        type=\"radio\" \r\n                        name=\"experience\" \r\n                        value=\"senior\" \r\n                        onChange={this.handleChange}\r\n                        checked={this.state.experience === 'senior'}/>Senior\r\n                </label>\r\n\r\n                <label>\r\n                    <input \r\n                        type=\"ckeckbox\" \r\n                        name=\"licence\"\r\n                        chacked={this.state.licence} /> Согласен с условием\r\n                </label>\r\n                <button type=\"submit\">Save</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react'\r\nimport './TodoEditor.css'\r\n\r\nclass TodoEditor extends Component {\r\n    state = {\r\n        message: ''\r\n    }\r\n\r\n    handleChange = e=> {\r\n        this.setState({message: e.currentTarget.value});\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        console.log(this.state);\r\n        this.props.onSubmit(this.state.message);\r\n        this.setState({message:''});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <form \r\n                className=\"TodoEditor\"\r\n                onSubmit={this.handleSubmit}>\r\n                <textarea \r\n                    className=\"TodoEditor__textarea\"\r\n                    value={this.state.message} \r\n                    onChange={this.handleChange}></textarea>\r\n                <button \r\n                    type=\"submit\"\r\n                    >\r\n                    Save\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoEditor;","import React from 'react'\r\n\r\nconst Filter = ({value, onChange}) => {\r\n    return (\r\n        <label>\r\n          Фильтр по имени <input type=\"text\" value={value} onChange={onChange}/>\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react';\n// import Counter from './components/Counter/';\n// import Dropdown from './components/Dropdown/';\nimport ColorPicker from './components/ColorPicker/'\nimport TodoList from './components/TodoList'\nimport Form from 'components/Form'\nimport TodoEditor from 'components/TodoEditor'\nimport initialTodos from './todos.json'\nimport shortid from 'shortid';\nimport Filter from 'components/Filter';\n\nconst colorPickerOptions = [\n  { label: 'red', color: '#F44336' },\n  { label: 'green', color: '#4CAF50' },\n  { label: 'blue', color: '#2196F3' },\n  { label: 'grey', color: '#607D88' },\n  { label: 'pink', color: '#E91E63' },\n  { label: 'indigo', color: '#3F5185' },\n];\n\nclass App extends Component {\n  state = {\n    todos: initialTodos,\n    filter: '',\n  };\n\n  addTodo = (text) => {\n    console.log(text);\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n    // создаем новый массив [...старый, элемент]\n    this.setState(({todos}) => ({\n      todos: [todo, ...todos],\n    }));\n  }\n\n  deleteTodo = (todoId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }))\n  }\n// получаем доступ к данным формы\n  formSubmitHandler = data => {\n    console.log(data);\n  }\n\n  toggleComplitid = todoId => {\n    console.log(todoId);\n    \n    this.setState(({todos}) => ({\n      todos: todos.map(todo =>\n        todo.id === todoId ? {...todo, completed: !todo.completed} : todo),\n    }));\n  }\n\n  changeFilter = (e) => {\n    this.setState({filter: e.currentTarget.value});\n  }\n\n  getVisibleTodos = () => {\n    const {todos, filter} = this.state;\n    const normalizedFilter = filter.toLowerCase()\n    return todos.filter(todo => \n      todo.text.toLowerCase().includes(normalizedFilter)\n    );\n  }\n\n  calculateCompletedTodos = () => {\n    const {todos} = this.state;\n    // 1й вариант\n    // const completedTodos = todos.filter(todo => todo.completed);\n    // 2й вариант\n    return todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0,\n    );\n  }\n\n\n\n  render() {\n    const {todos, filter} = this.state;\n    const totalTodoCount = todos.length;\n    const filteredTodos = this.getVisibleTodos()\n    const completedTodos = this.calculateCompletedTodos;\n    // console.log(completedTodos);\n    return (\n        <>\n        {/* // получаем доступ к данным формы */}\n        <Form onSubmit={this.formSubmitHandler}/>\n        {/* <h1>Состояние компонента</h1> */}\n\n        {/* <Counter initialValue={10}/> */}\n        {/* <Dropdown/> */}\n        <ColorPicker options={colorPickerOptions} />\n\n        <div>\n          <p>Общее кол-во туду: {totalTodoCount}</p>\n          <p>Кол-во выполненных: {completedTodos}</p>\n        </div>\n        <TodoEditor onSubmit={this.addTodo}/>\n\n        <Filter value={filter} onChange={this.changeFilter}/>\n        <TodoList \n          todos={filteredTodos} \n          onDeleteTodo={this.deleteTodo}\n          onToggleCompleted={this.toggleComplitid}\n        />\n        </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ColorPicker_container__SVOjF\",\"title\":\"ColorPicker_title__3j5fc\",\"option\":\"ColorPicker_option__H4lf4\",\"optionActive\":\"ColorPicker_optionActive__R5iKN\"};"],"sourceRoot":""}